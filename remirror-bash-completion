# bash completion for remirror        -*- shell-script -*-

_mylistselector()
{
    local cur="$1"
    local list_elems_all="$2"

    local realcur="${cur##*,}"
    local prefix="${cur%$realcur}"
    local elems word

    for word in $list_elems_all
    do
        if ! [[ $prefix == *"$word"* ]]; then
            elems="$word $elems"
        fi
    done
    COMPREPLY=( $(compgen -P "$prefix" -W "$elems" -S ',' -- $realcur) )
    compopt -o nospace
}

_mycountryselector()
{
    local cur="$1"
    local countries
    local countries_string
    local country

    local countries_antergos=(
        'Automated Mirror Selection'
        Bulgaria Canada China 'Czech Republic' Denmark England
        France Germany Greece Hungary
        Japan Netherlands Portugal Russia Spain Sweden USA
    )
    local countries_arch=(
        Worldwide
        Australia Austria Bangladesh Belarus Belgium
        'Bosnia and Herzegovina' Brazil Bulgaria Canada Chile
        China Colombia Croatia Czechia Denmark Ecuador Finland
        France Germany Greece 'Hong Kong' Hungary Iceland India
        Indonesia Iran Ireland Israel Italy Japan Kazakhstan
        Latvia Lithuania Luxembourg Macedonia Mexico Netherlands
        'New Caledonia' 'New Zealand' Norway Philippines Poland
        Portugal Qatar Romania Russia Serbia Singapore Slovakia
        Slovenia 'South Africa' 'South Korea' Spain Sweden Switzerland
        Taiwan Thailand Turkey Ukraine 'United Kingdom' 'United States'
        Vietnam
    )

    local osfile=/tmp/remirror-os.tmp
    local os
    if [ -r $osfile ] ; then
        os=$(cat $osfile | sed 's|,$||')
    fi

    case "$os" in
        Antergos)
            countries=( "${countries_antergos[@]}" )
            ;;
        Arch)
            countries=( "${countries_arch[@]}" )
            ;;
        both)
            countries=( "${countries_antergos[@]}" )
            countries+=( "${countries_arch[@]}" )
            ;;
        *)
            printf "\n os '$os' is unknown!\n" >&2
            COMPREPLY=()
            ;;
    esac

    for country in "${countries[@]}"
    do
        if [ "$countries_string" = "" ] ; then
            countries_string="${country// /_}"
        else
            countries_string+=" ${country// /_}"
        fi
    done

    _mylistselector "$cur" "$countries_string"

}

_remirror() 
{
    local cur prev #words cword split
    _init_completion -s || return

    local default_os=both     # combined Antergos and Arch mirrors...
    local osfile=/tmp/remirror-os.tmp

    if [ ! -e $osfile ] ; then
        echo "$default_os" > $osfile
    fi
    case "$prev" in
        *remirror|--c|--c=*)
            echo "$default_os" > $osfile
            ;;
    esac

    case "$prev" in
        -h|--help|--of|--quiet|--debug|--list|-v|--version)
            return
            ;;
        --c)
            _mycountryselector "$cur"
            return
            ;;
        --c-arch)
            echo "Arch" > $osfile
            _mycountryselector "$cur"
            return
            ;;
        --c-antergos)
            echo "Antergos" > $osfile
            _mycountryselector "$cur"
            return
            ;;
        --os)
            _mylistselector "$cur" "Antergos Arch both"
            if [ -n "$COMPREPLY" ] ; then
                echo "${COMPREPLY[0]}" > $osfile
            fi
            return
            ;;
        --p)
            _mylistselector "$cur" "https http"
            return
            ;;
        --save)
            _mylistselector "$cur" "no yes backup"
            return
            ;;
        --tm|--tr)
            COMPREPLY+=( $(compgen -P "$cur" -W "{0..9}") )
            compopt -o nospace
            return
            ;;
        *)
            ;;
    esac

    local opts="--os= --c= --c-arch= --c-antergos= --p= --tm= --tr= --save="
    opts+=" --quiet --help -h  --of --debug --list -v --version"

    case "$cur" in
        -*|"")
            COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
            compopt -o nospace
            return
            ;;
        *)
            ;;
    esac

} &&
complete -F _remirror remirror
